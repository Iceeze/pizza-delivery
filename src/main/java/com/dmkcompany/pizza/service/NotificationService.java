package com.dmkcompany.pizza.service;

import com.dmkcompany.pizza.factory.*;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.List;

@Slf4j
@Service
@RequiredArgsConstructor
public class NotificationService {

    private final NotificationFactory notificationFactory;

    public void sendNotification(NotificationType type, String to, String content) {
        try {
            Notification notification = notificationFactory.createNotification(type);
            NotificationMessage message = new NotificationMessage(to, content, type);

            log.info("üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ {} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è: {}", type, to);
            notification.send(message);
            log.info("‚úÖ {} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", type);

        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {}", type, e.getMessage());
            throw new RuntimeException("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", e);
        }
    }

    public void sendOrderNotification(NotificationType type, String to, String orderNumber, Double amount) {
        String content = String.format(
                "–ó–∞–∫–∞–∑ #%s —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –°—É–º–º–∞: %.2f —Ä—É–±. –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! üçï",
                orderNumber, amount
        );

        sendNotification(type, to, content);
    }

    public void sendOrderStatusNotification(NotificationType type, String to, String orderNumber, String status) {
        String content = String.format(
                "–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ #%s –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: %s",
                orderNumber, status
        );

        sendNotification(type, to, content);
    }
}